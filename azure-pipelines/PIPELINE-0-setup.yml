# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Pipeline that deploys the infrastructure and sets up compute & data in the AML workspace

trigger:
- none

pr:
  branches:
    include:
    - main
    - dev
  paths:
    include:
    - configuration/compute
    - configuration/configuration-infra-DEV.variables.yml
    - configuration/configuration-infra-PRD.variables.yml
    - azure-pipelines/PIPELINE-0-setup.yml


variables:
- template: ../configuration/configuration-aml.variables.yml
- template: ../configuration/configuration-infra-DEV.variables.yml # DEV as default env

pool:
  vmImage: $(VM_VERSION)

stages:

####################
##  DEPLOY INFRA  ##
####################

# Deploy DEV Environment
- stage: deployinfra_dev
  displayName: 'Deploy DEV Environment'
  variables:
  - template: ../configuration/configuration-infra-DEV.variables.yml
  jobs:
  - template: templates/deploy-env-infra.template.yml
    parameters:
      environment: $(ENVIRONMENT)
      serviceConnection: $(SERVICECONNECTION_RG)
      resourceGroup: $(RESOURCE_GROUP)
      location: $(LOCATION)
      storageAccount: $(STORAGEACCOUNT)
      keyVault: $(KEYVAULT)
      appInsights: $(APPINSIGHTS)
      containerRegistry: $(CONTAINERREGISTRY)
      amlWorkspace: $(AMLWORKSPACE)

# Deploy PRD Environment
- stage: deployinfra_prd
  displayName: 'Deploy PRD Environment'
  condition: eq(variables['build.sourceBranch'], 'refs/heads/main')
  variables:
  - template: ../configuration/configuration-infra-PRD.variables.yml
  jobs:
  - template: templates/deploy-env-infra.template.yml
    parameters:
      environment: $(ENVIRONMENT)
      serviceConnection: $(SERVICECONNECTION_RG)
      resourceGroup: $(RESOURCE_GROUP)
      location: $(LOCATION)
      storageAccount: $(STORAGEACCOUNT)
      keyVault: $(KEYVAULT)
      appInsights: $(APPINSIGHTS)
      containerRegistry: $(CONTAINERREGISTRY)
      amlWorkspace: $(AMLWORKSPACE)


#####################
##  COMPUTE SETUP  ##
#####################

# Compute Setup DEV Environment
- stage: computesetup_dev
  displayName: 'Compute Setup DEV Environment'
  dependsOn: deployinfra_dev
  variables:
  - template: ../configuration/configuration-infra-DEV.variables.yml
  jobs:
  - template: templates/setup-compute.template.yml
    parameters:
      environment: $(ENVIRONMENT)
      serviceConnection: $(SERVICECONNECTION_RG)
      resourceGroup: $(RESOURCE_GROUP)
      amlWorkspace: $(AMLWORKSPACE)

# Compute Setup PRD Environment
- stage: computesetup_prd
  displayName: 'Compute Setup PRD Environment'
  dependsOn: deployinfra_prd
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
  variables:
  - template: ../configuration/configuration-infra-PRD.variables.yml
  jobs:
  - template: templates/setup-compute.template.yml
    parameters:
      environment: $(ENVIRONMENT)
      serviceConnection: $(SERVICECONNECTION_RG)
      resourceGroup: $(RESOURCE_GROUP)
      amlWorkspace: $(AMLWORKSPACE)

####################################
##  RESGISTER EXTERNAL DATASTORE  ##
####################################

# Resgister External Datastore DEV Environment
- stage: datastore_register_dev
  displayName: 'Datastore Registration DEV Environment'
  dependsOn: deployinfra_dev
  variables:
  - template: ../configuration/configuration-infra-DEV.variables.yml
  jobs:
  - template: templates/register-external-datastore.template.yml
    parameters:
      serviceConnection: $(SERVICECONNECTION_RG)
      resourceGroup: $(RESOURCE_GROUP)
      amlWorkspace: $(AMLWORKSPACE)
      accountName: $(EXTERNALSTORAGEACCOUNT)
      filesystem: $(EXTERNALFILESYSTEM)
      datastoreName: $(EXTERNALDATASTORENAME)
      subscriptionId: $(EXTERNALSTORAGEACCOUNTSUBSCRIPTIONID)
      extSaResourceGroup: $(EXTERNALSTORAGEACCOUNTRG)
      datasetDataPath: $(DATASETDATAPATH)

# Resgister External Datastore PRD Environment
- stage: datastore_register_prd
  displayName: 'Datastore Registration PRD Environment'
  dependsOn: deployinfra_prd
  variables:
  - template: ../configuration/configuration-infra-PRD.variables.yml
  jobs:
  - template: templates/register-external-datastore.template.yml
    parameters:
      serviceConnection: $(SERVICECONNECTION_RG)
      resourceGroup: $(RESOURCE_GROUP)
      amlWorkspace: $(AMLWORKSPACE)
      accountName: $(EXTERNALSTORAGEACCOUNT)
      filesystem: $(EXTERNALFILESYSTEM)
      datastoreName: $(EXTERNALDATASTORENAME)
      subscriptionId: $(EXTERNALSTORAGEACCOUNTSUBSCRIPTIONID)
      extSaResourceGroup: $(EXTERNALSTORAGEACCOUNTRG)
      datasetDataPath: $(DATASETDATAPATH)

########################
##  DATA PREPARATION  ##
########################

# # Data Prep DEV Environment
# - stage: dataprep_dev
#   displayName: 'Data Preparation DEV Environment'
#   dependsOn: deployinfra_dev
#   variables:
#   - template: ../configuration/configuration-infra-DEV.variables.yml
#   jobs:
#   - template: templates/update-data.template.yml
#     parameters:
#       serviceConnection: $(SERVICECONNECTION_RG)
#       resourceGroup: $(RESOURCE_GROUP)
#       amlWorkspace: $(AMLWORKSPACE)
#       storageAccount: $(STORAGEACCOUNT)

# # Data Prep PRD Environment
# - stage: dataprep_prd
#   displayName: 'Data Preparation PRD Environment'
#   dependsOn: deployinfra_prd
#   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
#   variables:
#   - template: ../configuration/configuration-infra-PRD.variables.yml
#   jobs:
#   - template: templates/update-data.template.yml
#     parameters:
#       serviceConnection: $(SERVICECONNECTION_RG)
#       resourceGroup: $(RESOURCE_GROUP)
#       amlWorkspace: $(AMLWORKSPACE)
